name: Auto Bump Firmware Version

on:
  push:
    branches:
      - main

permissions:
  contents: write   # ðŸ‘ˆ necesario para poder hacer push y crear tags

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Git for push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Detect source branch
        id: branch
        run: |
          source_branch=$(git log -1 --pretty=%B | grep -oE '(feature|hotfix)/[a-zA-Z0-9._-]+' || echo "")
          echo "source_branch=$source_branch" >> $GITHUB_OUTPUT

      - name: Read current version
        id: read_version
        run: |
          version_line=$(grep "__version__" version.py)
          version=$(echo $version_line | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
          IFS='.' read -r major minor patch <<<"$version"

          if [[ "${{ steps.branch.outputs.source_branch }}" == feature/* ]]; then
            minor=$((minor+1))
            patch=0
          elif [[ "${{ steps.branch.outputs.source_branch }}" == hotfix/* ]]; then
            patch=$((patch+1))
          else
            patch=$((patch+1))
          fi

          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update version.py
        run: |
          sed -i "s/__version__ = \".*\"/__version__ = \"${{ steps.read_version.outputs.new_version }}\"/" version.py
          git add version.py
          git commit -m "chore: bump version to ${{ steps.read_version.outputs.new_version }}"
          git push origin main

      - name: Create tag
        run: |
          git tag v${{ steps.read_version.outputs.new_version }}
          git push origin v${{ steps.read_version.outputs.new_version }}
